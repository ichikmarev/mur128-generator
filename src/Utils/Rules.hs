module Rules ( 
   Символ(Терминал,Нетерминал), 
    
   (-->),
   
   Правило(..),
   
   Правила
)
where 

import qualified Data.Set as Sets   

-- Тип Символ определяет, что такое символ формальной грамматики.
data Символ a b = 
   Нетерминал a | Терминал b deriving(Eq,Ord,Show)

-- Тип Правило определяет, что такое правило формальной грамматики.
data Правило a b = 
   Правило{понятие :: a, тело :: [Символ a b]} deriving(Eq,Ord,Show)

(-->) :: a -> [Символ a b] -> Правило a b
s --> r = Правило {понятие = s, тело = r}

infix 9 -->

-- Тип Правила определяет формальную грамматику как множество правил.    
type Правила a b = Sets.Set (Правило a b)  